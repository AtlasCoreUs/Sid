// ü§ñ SYST√àME DE CHAT CONTEXTUEL INTELLIGENT

export interface ChatContext {
  currentStep: string
  userProfile: {
    techLevel: 'beginner' | 'intermediate' | 'expert'
    businessType?: string
    previousQuestions: string[]
  }
  appData?: any
}

export interface FAQResponse {
  question: string
  answer: string
  followUpActions?: Array<{
    label: string
    action: string
  }>
  confidence: number
}

// üí¨ BASE DE CONNAISSANCES FAQ
export const FAQ_DATABASE = {
  pricing: {
    "C'est vraiment 299‚Ç¨ pour tout?": {
      answer: "OUI ! 299‚Ç¨ = App compl√®te + Formation √©quipe + Support VIP + Updates √† vie. Pas de frais cach√©s, JAMAIS. Compare avec une agence web √† 10,000‚Ç¨... Tu √©conomises 9,701‚Ç¨ ! ü§Ø",
      followUp: [
        { label: "Voir le d√©tail de l'offre", action: "show_pricing_details" },
        { label: "Commencer maintenant", action: "start_wizard" }
      ]
    },
    
    "Y a-t-il des frais mensuels?": {
      answer: "Z√âRO frais cach√©s ! Le hosting est INCLUS la premi√®re ann√©e (valeur 600‚Ç¨). Apr√®s, c'est 19‚Ç¨/mois pour l'h√©bergement premium. Mais tu peux aussi h√©berger toi-m√™me si tu veux ! üí™",
      followUp: [
        { label: "En savoir plus sur l'hosting", action: "hosting_info" }
      ]
    },
    
    "Puis-je essayer avant d'acheter?": {
      answer: "MIEUX ! Tu as 60 jours SATISFAIT ou REMBOURS√â. Si ton CA n'augmente pas de 20%, on te rembourse INT√âGRALEMENT. C'est nous qui prenons le risque, pas toi ! üõ°Ô∏è",
      followUp: [
        { label: "Cr√©er mon app maintenant", action: "start_wizard" }
      ]
    }
  },
  
  technical: {
    "Je n'y connais rien en tech, c'est grave?": {
      answer: "C'est PARFAIT ! SID est fait pour les NON-TECHNICIENS. Si tu sais envoyer un email, tu sais cr√©er ton app. Notre IA te guide √† chaque √©tape. 95% de nos users n'avaient JAMAIS cod√© ! üéâ",
      followUp: [
        { label: "Voir une d√©mo", action: "watch_demo" },
        { label: "Commencer avec l'aide de SID", action: "start_with_ai" }
      ]
    },
    
    "Combien de temps pour cr√©er mon app?": {
      answer: "15 MINUTES CHRONO ! ‚è±Ô∏è 1) Tu choisis ton template (2 min) 2) Tu personnalises (5 min) 3) SID configure tout (8 min) 4) TON APP EST LIVE ! Plus rapide que commander une pizza üçï",
      followUp: [
        { label: "Essayer maintenant", action: "start_wizard" }
      ]
    },
    
    "Puis-je modifier mon app apr√®s?": {
      answer: "√âVIDEMMENT ! Tu peux TOUT modifier, TOUT le temps. Ajouter des pages, changer les couleurs, nouvelles fonctionnalit√©s... C'est TON app, tu en fais ce que tu veux ! √âditeur visuel super simple inclus üé®",
      followUp: [
        { label: "Voir l'√©diteur en action", action: "editor_demo" }
      ]
    }
  },
  
  features: {
    "Quelles fonctionnalit√©s sont incluses?": {
      answer: "TOUT EST INCLUS ! üì± App mobile + web, ü§ñ IA int√©gr√©e, üìä Analytics, üë• Gestion √©quipe, üìÖ R√©servations, üí≥ Paiements, üìß Notifications, üîí S√©curit√© maximale... La liste est TROP longue ! Regarde √ßa...",
      followUp: [
        { label: "Voir toutes les features", action: "show_all_features" },
        { label: "Features par m√©tier", action: "features_by_industry" }
      ]
    },
    
    "L'app fonctionne offline?": {
      answer: "OUI ! Mode OFFLINE complet üì¥ Tes donn√©es sont synchronis√©es d√®s que tu retrouves internet. Parfait pour les restos en sous-sol, les salons sans wifi... Tu ne perds JAMAIS une vente ! üí™",
      followUp: [
        { label: "En savoir plus sur le PWA", action: "pwa_info" }
      ]
    },
    
    "Et si j'ai besoin d'une feature sp√©ciale?": {
      answer: "On y a pens√© ! üéØ 1) 80% des demandes sont d√©j√† dans l'app 2) Notre marketplace a 500+ extensions 3) API ouverte pour tes d√©veloppeurs 4) Notre √©quipe peut coder du sur-mesure. RIEN n'est impossible !",
      followUp: [
        { label: "Explorer le marketplace", action: "marketplace" },
        { label: "Demander une feature", action: "request_feature" }
      ]
    }
  },
  
  support: {
    "Quel support apr√®s l'achat?": {
      answer: "SUPPORT VIP √Ä VIE ! üåü WhatsApp direct avec l'√©quipe, r√©ponse en -2h, formation vid√©o illimit√©e, communaut√© priv√©e de 10,000+ cr√©ateurs... On est l√† jusqu'√† ce que tu DOMINES ton march√© ! üöÄ",
      followUp: [
        { label: "Rejoindre la communaut√©", action: "join_community" }
      ]
    },
    
    "Et si je me plante?": {
      answer: "IMPOSSIBLE ! üõ°Ô∏è 1) SID te guide √† chaque √©tape 2) Templates test√©s par 10,000+ pros 3) Support WhatsApp 24/7 4) Communaut√© entraide 5) GARANTIE remboursement 60 jours. Tu ne peux QUE r√©ussir !",
      followUp: [
        { label: "Voir les success stories", action: "success_stories" },
        { label: "Commencer sans risque", action: "start_wizard" }
      ]
    }
  },
  
  business: {
    "√áa marche vraiment pour mon business?": {
      answer: "OUI ! Peu importe ton secteur üéØ Restaurant? +40% de CA. Salon? -50% no-shows. Clinique? 3x plus de RDV. Gym? +200 membres/mois. On a des SUCCESS STORIES dans TOUS les domaines !",
      followUp: [
        { label: "Voir mon secteur", action: "industry_examples" },
        { label: "Calculer mon ROI", action: "roi_calculator" }
      ]
    },
    
    "Mes concurrents ont d√©j√† un site...": {
      answer: "PARFAIT ! üî• Un site en 2024 = une carte de visite en 1990. OBSOL√àTE ! Avec ton app, tu passes de 'comme tout le monde' √† 'WOW, c'est quoi ce truc ?!'. First-mover advantage = TU DOMINES ! üëë",
      followUp: [
        { label: "Voir la diff√©rence app vs site", action: "app_vs_website" },
        { label: "Devenir le leader maintenant", action: "start_wizard" }
      ]
    }
  }
}

// üß† ANALYSEUR DE QUESTIONS INTELLIGENT
export class SmartChatAnalyzer {
  
  // D√©tecte l'intention de la question
  detectIntent(question: string): string[] {
    const intents = []
    
    // Prix et co√ªts
    if (/prix|co√ªt|combien|‚Ç¨|euro|cher|gratuit|payer/i.test(question)) {
      intents.push('pricing')
    }
    
    // Technique et difficult√©
    if (/difficile|compliqu√©|tech|coder|programmer|facile/i.test(question)) {
      intents.push('technical')
    }
    
    // Fonctionnalit√©s
    if (/fonction|feature|inclus|peut-on|possible/i.test(question)) {
      intents.push('features')
    }
    
    // Support et aide
    if (/aide|support|accompagn|forma|appren/i.test(question)) {
      intents.push('support')
    }
    
    // Business et ROI
    if (/marche|business|concurrent|client|vente|ca |chiffre/i.test(question)) {
      intents.push('business')
    }
    
    return intents.length > 0 ? intents : ['general']
  }
  
  // Trouve la meilleure r√©ponse
  findBestAnswer(question: string, context: ChatContext): FAQResponse | null {
    const intents = this.detectIntent(question)
    let bestMatch: FAQResponse | null = null
    let highestScore = 0
    
    // Parcourir toutes les cat√©gories pertinentes
    for (const intent of intents) {
      const category = FAQ_DATABASE[intent as keyof typeof FAQ_DATABASE]
      if (!category) continue
      
      for (const [faqQuestion, faqData] of Object.entries(category)) {
        const score = this.calculateSimilarity(question, faqQuestion)
        
        if (score > highestScore) {
          highestScore = score
          bestMatch = {
            question: faqQuestion,
            answer: faqData.answer,
            followUpActions: faqData.followUp,
            confidence: score
          }
        }
      }
    }
    
    // Si la confiance est trop faible, proposer une r√©ponse g√©n√©rique
    if (!bestMatch || highestScore < 0.3) {
      return this.getGenericResponse(question, context)
    }
    
    return bestMatch
  }
  
  // Calcule la similarit√© entre deux questions
  calculateSimilarity(q1: string, q2: string): number {
    const normalize = (str: string) => str.toLowerCase()
      .replace(/[?!.,]/g, '')
      .split(' ')
      .filter(word => word.length > 2)
    
    const words1 = normalize(q1)
    const words2 = normalize(q2)
    
    // Mots en commun
    const common = words1.filter(word => words2.includes(word))
    
    // Score de Jaccard
    const union = new Set([...words1, ...words2])
    const score = common.length / union.size
    
    // Bonus si mots cl√©s importants
    const keywords = ['prix', 'combien', 'temps', 'difficile', 'marche', 'support']
    const keywordBonus = keywords.filter(kw => 
      q1.toLowerCase().includes(kw) && q2.toLowerCase().includes(kw)
    ).length * 0.2
    
    return Math.min(score + keywordBonus, 1)
  }
  
  // R√©ponse g√©n√©rique intelligente
  getGenericResponse(question: string, context: ChatContext): FAQResponse {
    const responses = {
      beginner: "Super question ! ü§î Je ne suis pas s√ªr d'avoir la r√©ponse exacte, mais ce que je peux te dire c'est que SID est con√ßu pour √™tre ULTRA simple. Veux-tu que je te montre une d√©mo ou pr√©f√®res-tu parler √† un humain ?",
      intermediate: "Excellente question ! Pour √™tre s√ªr de te donner la meilleure r√©ponse, peux-tu me pr√©ciser un peu plus ? En attendant, sache que 95% des features demand√©es sont d√©j√† incluses !",
      expert: "Question technique int√©ressante ! Notre API est document√©e sur docs.sid-hud.com. Pour une r√©ponse pr√©cise, notre √©quipe tech est dispo sur le Slack d√©di√©. Veux-tu que je te connecte ?"
    }
    
    return {
      question: question,
      answer: responses[context.userProfile.techLevel],
      followUpActions: [
        { label: "Voir une d√©mo", action: "watch_demo" },
        { label: "Parler √† un humain", action: "human_support" },
        { label: "Explorer les docs", action: "documentation" }
      ],
      confidence: 0.5
    }
  }
}

// üéØ R√âPONSES CONTEXTUELLES PAR √âTAPE
export const STEP_SPECIFIC_RESPONSES = {
  businessInfo: {
    greeting: "Salut ! Je suis SID ü§ñ Raconte-moi ton business, je vais t'aider √† cr√©er une app qui CARTONNE ! C'est quoi ton projet ?",
    
    tips: [
      "üí° Astuce: Plus tu me donnes de d√©tails, plus ton app sera personnalis√©e !",
      "üéØ Pense √† tes clients: qu'est-ce qui les frustre aujourd'hui ?",
      "üöÄ Imagine ton business dans 1 an avec ton app... Excitant non ?"
    ],
    
    encouragements: [
      "G√©nial ! Continue comme √ßa ! üî•",
      "J'adore ton projet ! √áa va √™tre √âNORME ! üí™",
      "Tu vas r√©volutionner ton secteur ! üöÄ"
    ]
  },
  
  template: {
    greeting: "OK, maintenant le fun ! üé® Quel style d'app tu veux ? J'ai des templates DE MALADE qui ont fait leurs preuves !",
    
    recommendations: {
      restaurant: "Le template RESTAURANT a g√©n√©r√© +40% de CA en moyenne ! Avec gestion stocks, allerg√®nes, √©quipe... C'est une MACHINE DE GUERRE ! üçΩÔ∏è",
      salon: "SALON BEAUT√â = -50% no-shows GARANTI ! Booking intelligent, rappels auto, galerie avant/apr√®s... Tes clientes vont ADORER ! üíÖ",
      clinic: "CLINIQUE M√âDICALE: Conformit√© totale, prise RDV intelligente, dossiers s√©curis√©s... Les patients disent que c'est MIEUX qu'un h√¥pital ! ‚öïÔ∏è",
      gym: "GYM POWER: +200 membres en 3 mois en moyenne ! Challenges, leaderboards, r√©servations... Les membres deviennent ADDICTS ! üí™"
    }
  },
  
  customization: {
    greeting: "Time to shine ! ‚ú® On va faire de ton app un BIJOU visuel. Tes couleurs pr√©f√©r√©es ?",
    
    colorPsychology: {
      purple: "Violet = Luxe et cr√©ativit√©. PARFAIT pour se d√©marquer ! üíú",
      blue: "Bleu = Confiance et professionnalisme. Les clients ADORENT ! üíô",
      green: "Vert = Croissance et sant√©. Id√©al pour le bien-√™tre ! üíö",
      orange: "Orange = √ânergie et enthousiasme. √áa va P√âTER ! üß°"
    }
  },
  
  features: {
    greeting: "Derni√®re √©tape ! üéØ Quelles super-powers tu veux dans ton app ? (Spoiler: tu peux TOUT avoir !)",
    
    musthaves: {
      all: [
        "üì± Notifications push = +40% engagement GARANTI",
        "üìä Analytics temps r√©el = Tu vois TOUT ce qui se passe",
        "üîí S√©curit√© maximale = Tes donn√©es sont INTOUCHABLES",
        "üåê Multi-langues = Conquiers le MONDE entier"
      ]
    }
  },
  
  review: {
    greeting: "BRAVO ! üéâ Ton app est PR√äTE ! Regarde-moi ce bijou... Tu vas DOMINER ton march√© !",
    
    finalPush: [
      "‚ö° Dans 30 secondes, ton app sera LIVE",
      "üöÄ Tes concurrents vont HALLUCINER",
      "üíé Tu rejoins l'√©lite des APP CREATORS",
      "üèÜ Pr√©pare-toi au SUCCESS !"
    ]
  }
}

// üî• G√âN√âRATEUR DE R√âPONSES DYNAMIQUES
export class DynamicResponseGenerator {
  
  generateResponse(context: ChatContext, userMessage: string): string {
    const analyzer = new SmartChatAnalyzer()
    const faqResponse = analyzer.findBestAnswer(userMessage, context)
    
    // Si on a une FAQ qui match bien
    if (faqResponse && faqResponse.confidence > 0.7) {
      return this.formatFAQResponse(faqResponse, context)
    }
    
    // Sinon, r√©ponse contextuelle selon l'√©tape
    return this.getStepSpecificResponse(context, userMessage)
  }
  
  formatFAQResponse(faq: FAQResponse, context: ChatContext): string {
    let response = faq.answer
    
    // Personnaliser selon le profil
    if (context.userProfile.businessType) {
      response = response.replace(/ton business/gi, `ton ${context.userProfile.businessType}`)
    }
    
    // Ajouter les actions sugg√©r√©es
    if (faq.followUpActions && faq.followUpActions.length > 0) {
      response += "\n\nüí° Je peux aussi:"
      faq.followUpActions.forEach(action => {
        response += `\n‚Ä¢ ${action.label}`
      })
    }
    
    return response
  }
  
  getStepSpecificResponse(context: ChatContext, message: string): string {
    const stepResponses = STEP_SPECIFIC_RESPONSES[context.currentStep as keyof typeof STEP_SPECIFIC_RESPONSES]
    
    if (!stepResponses) {
      return "Je suis l√† pour t'aider ! Dis-moi ce que tu veux savoir ü§ñ"
    }
    
    // D√©tecter le type de message
    if (message.length < 10) {
      // Message court = encouragement
      const encouragements = (stepResponses as any).encouragements || ["Super ! üëç"]
      return encouragements[Math.floor(Math.random() * encouragements.length)]
    }
    
    // Message avec question
    if (message.includes('?')) {
      return this.handleStepQuestion(context, message)
    }
    
    // Sinon, conseil contextuel
    const tips = (stepResponses as any).tips || ["Continue, tu es sur la bonne voie ! üöÄ"]
    return tips[Math.floor(Math.random() * tips.length)]
  }
  
  handleStepQuestion(context: ChatContext, question: string): string {
    // Questions sp√©cifiques par √©tape
    const stepQuestions: Record<string, Record<string, string>> = {
      businessInfo: {
        "clients": "Excellente question ! Pense √† tes meilleurs clients actuels. Qu'est-ce qui les ferait dire 'WOW' ? Une app qui leur fait gagner du temps ? Qui les fid√©lise ? Dis-moi tout ! üéØ",
        "concurrent": "Les concurrents ? PARFAIT ! Tu vas les D√âPASSER ! Avec ton app, tu passes de 'comme eux' √† 'UNIQUE'. C'est quoi leur plus gros point faible ? üòà"
      },
      template: {
        "diff√©rence": "Excellente question ! Chaque template est OPTIMIS√â pour son secteur. Restaurant = gestion √©quipe. Salon = anti no-show. Clinique = conformit√© m√©dicale. Lequel te fait vibrer ? üöÄ",
        "personnalis": "TOUT est personnalisable ! Le template c'est juste la base PARFAITE. Apr√®s, on adapte 100% √† TON business. C'est √ßa la magie ! ‚ú®"
      }
    }
    
    // Chercher des mots cl√©s dans la question
    const currentStepQuestions = stepQuestions[context.currentStep] || {}
    
    for (const [keyword, response] of Object.entries(currentStepQuestions)) {
      if (question.toLowerCase().includes(keyword)) {
        return response
      }
    }
    
    // R√©ponse par d√©faut encourageante
    return "Super question ! ü§î √áa montre que tu r√©fl√©chis bien √† ton projet. Continue √† me donner des d√©tails, plus j'en sais, plus ton app sera PARFAITE ! üí™"
  }
}